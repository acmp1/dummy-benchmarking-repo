// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package storage_bench

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ObjectRead struct {
	BucketName           string   `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	ObjectName           string   `protobuf:"bytes,2,opt,name=objectName,proto3" json:"objectName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectRead) Reset()         { *m = ObjectRead{} }
func (m *ObjectRead) String() string { return proto.CompactTextString(m) }
func (*ObjectRead) ProtoMessage()    {}
func (*ObjectRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

func (m *ObjectRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectRead.Unmarshal(m, b)
}
func (m *ObjectRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectRead.Marshal(b, m, deterministic)
}
func (m *ObjectRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectRead.Merge(m, src)
}
func (m *ObjectRead) XXX_Size() int {
	return xxx_messageInfo_ObjectRead.Size(m)
}
func (m *ObjectRead) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectRead.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectRead proto.InternalMessageInfo

func (m *ObjectRead) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *ObjectRead) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

type ObjectWrite struct {
	BucketName           string   `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	ObjectName           string   `protobuf:"bytes,2,opt,name=objectName,proto3" json:"objectName,omitempty"`
	Destination          string   `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectWrite) Reset()         { *m = ObjectWrite{} }
func (m *ObjectWrite) String() string { return proto.CompactTextString(m) }
func (*ObjectWrite) ProtoMessage()    {}
func (*ObjectWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}

func (m *ObjectWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectWrite.Unmarshal(m, b)
}
func (m *ObjectWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectWrite.Marshal(b, m, deterministic)
}
func (m *ObjectWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectWrite.Merge(m, src)
}
func (m *ObjectWrite) XXX_Size() int {
	return xxx_messageInfo_ObjectWrite.Size(m)
}
func (m *ObjectWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectWrite.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectWrite proto.InternalMessageInfo

func (m *ObjectWrite) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *ObjectWrite) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *ObjectWrite) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type Completed struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Completed) Reset()         { *m = Completed{} }
func (m *Completed) String() string { return proto.CompactTextString(m) }
func (*Completed) ProtoMessage()    {}
func (*Completed) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}

func (m *Completed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Completed.Unmarshal(m, b)
}
func (m *Completed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Completed.Marshal(b, m, deterministic)
}
func (m *Completed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Completed.Merge(m, src)
}
func (m *Completed) XXX_Size() int {
	return xxx_messageInfo_Completed.Size(m)
}
func (m *Completed) XXX_DiscardUnknown() {
	xxx_messageInfo_Completed.DiscardUnknown(m)
}

var xxx_messageInfo_Completed proto.InternalMessageInfo

func (m *Completed) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Completed) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ObjectRead)(nil), "storage_bench.ObjectRead")
	proto.RegisterType((*ObjectWrite)(nil), "storage_bench.ObjectWrite")
	proto.RegisterType((*Completed)(nil), "storage_bench.Completed")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x51, 0x3d, 0x4b, 0xc4, 0x40,
	0x10, 0x35, 0x6a, 0x4e, 0x6e, 0x82, 0xcd, 0x22, 0x12, 0x0f, 0x91, 0x63, 0x2b, 0xab, 0x14, 0x5a,
	0x59, 0x88, 0x70, 0xb6, 0xa2, 0x12, 0x0b, 0x4b, 0xd9, 0xdd, 0x0c, 0x67, 0xd4, 0xec, 0x84, 0xb9,
	0xb9, 0x1f, 0xe1, 0xbf, 0x96, 0xec, 0xae, 0x1a, 0x45, 0x6c, 0xae, 0x7c, 0x1f, 0x33, 0x6f, 0xf7,
	0x0d, 0xec, 0xaf, 0x84, 0xd8, 0x2c, 0xb1, 0xea, 0x99, 0x84, 0xd4, 0x27, 0x7c, 0xb2, 0xe8, 0xdd,
	0xb3, 0xbe, 0x01, 0xb8, 0xb3, 0x2f, 0xe8, 0xa4, 0x46, 0xd3, 0xa8, 0x13, 0x00, 0xbb, 0x76, 0xaf,
	0x28, 0xb7, 0xa6, 0xc3, 0x32, 0x9b, 0x67, 0xa7, 0xd3, 0x7a, 0xc4, 0x0c, 0x3a, 0x05, 0x77, 0xd0,
	0xb7, 0xa3, 0xfe, 0xcd, 0x68, 0x82, 0x22, 0x6e, 0x7b, 0xe4, 0x56, 0x70, 0xd3, 0x75, 0x6a, 0x0e,
	0x45, 0x83, 0x2b, 0x69, 0xbd, 0x91, 0x96, 0x7c, 0xb9, 0x13, 0x0c, 0x63, 0x4a, 0x5f, 0xc0, 0xf4,
	0x9a, 0xba, 0xfe, 0x0d, 0x05, 0x1b, 0x75, 0x08, 0x13, 0xbf, 0xee, 0x2c, 0x72, 0x88, 0xca, 0xeb,
	0x84, 0xd4, 0x01, 0xe4, 0xc8, 0x4c, 0x9c, 0x12, 0x22, 0x38, 0x7b, 0xcf, 0x60, 0x2f, 0x75, 0xa1,
	0xae, 0x20, 0x8f, 0x2f, 0x9e, 0x55, 0x3f, 0xea, 0xa9, 0x46, 0xbf, 0x99, 0x95, 0xbf, 0xb4, 0xaf,
	0x60, 0xbd, 0xa5, 0x2e, 0x61, 0x37, 0x14, 0x78, 0xf4, 0xe7, 0xfc, 0x20, 0xfd, 0x37, 0xbe, 0x38,
	0x86, 0x62, 0xc9, 0xbd, 0x4b, 0x86, 0x45, 0x00, 0x0f, 0x11, 0xdc, 0x67, 0x76, 0x12, 0x2e, 0x77,
	0xfe, 0x11, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x73, 0x30, 0x92, 0xca, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	Write(ctx context.Context, in *ObjectWrite, opts ...grpc.CallOption) (*Completed, error)
	Read(ctx context.Context, in *ObjectRead, opts ...grpc.CallOption) (*Completed, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Write(ctx context.Context, in *ObjectWrite, opts ...grpc.CallOption) (*Completed, error) {
	out := new(Completed)
	err := c.cc.Invoke(ctx, "/storage_bench.storage/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Read(ctx context.Context, in *ObjectRead, opts ...grpc.CallOption) (*Completed, error) {
	out := new(Completed)
	err := c.cc.Invoke(ctx, "/storage_bench.storage/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	Write(context.Context, *ObjectWrite) (*Completed, error)
	Read(context.Context, *ObjectRead) (*Completed, error)
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectWrite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage_bench.storage/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Write(ctx, req.(*ObjectWrite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectRead)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage_bench.storage/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Read(ctx, req.(*ObjectRead))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage_bench.storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _Storage_Write_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Storage_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage.proto",
}
